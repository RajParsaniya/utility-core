const functionalContentMapping = new Map();

functionalContentMapping.set("functional-boolean-supplier", "../../content/functional/boolean-supplier.html");
functionalContentMapping.set("functional-int-supplier", "../../content/functional/int-supplier.html");
functionalContentMapping.set("functional-int-consumer", "../../content/functional/int-consumer.html");
functionalContentMapping.set("functional-int-predicate", "../../content/functional/int-predicate.html");
functionalContentMapping.set("functional-int-to-long-function", "../../content/functional/int-to-long-function.html");
functionalContentMapping.set("functional-int-to-double-function", "../../content/functional/int-to-double-function.html");
functionalContentMapping.set("functional-int-binary-operator", "../../content/functional/int-binary-operator.html");
functionalContentMapping.set("functional-int-unary-operator", "../../content/functional/int-unary-operator.html");
functionalContentMapping.set("functional-long-supplier", "../../content/functional/long-supplier.html");
functionalContentMapping.set("functional-long-consumer", "../../content/functional/long-consumer.html");
functionalContentMapping.set("functional-long-predicate", "../../content/functional/long-predicate.html");
functionalContentMapping.set("functional-long-to-int-function", "../../content/functional/long-to-int-function.html");
functionalContentMapping.set("functional-long-to-double-function", "../../content/functional/long-to-double-function.html");
functionalContentMapping.set("functional-long-binary-operator", "../../content/functional/long-binary-operator.html");
functionalContentMapping.set("functional-long-unary-operator", "../../content/functional/long-unary-operator.html");
functionalContentMapping.set("functional-double-supplier", "../../content/functional/double-supplier.html");
functionalContentMapping.set("functional-double-consumer", "../../content/functional/double-consumer.html");
functionalContentMapping.set("functional-double-predicate", "../../content/functional/double-predicate.html");
functionalContentMapping.set("functional-double-to-int-function", "../../content/functional/double-to-int-function.html");
functionalContentMapping.set("functional-double-to-long-function", "../../content/functional/double-to-long-function.html");
functionalContentMapping.set("functional-double-binary-operator", "../../content/functional/double-binary-operator.html");
functionalContentMapping.set("functional-double-unary-operator", "../../content/functional/double-unary-operator.html");
functionalContentMapping.set("functional-supplier", "../../content/functional/supplier.html");
functionalContentMapping.set("functional-consumer", "../../content/functional/consumer.html");
functionalContentMapping.set("functional-predicate", "../../content/functional/predicate.html");
functionalContentMapping.set("functional-function", "../../content/functional/function.html");
functionalContentMapping.set("functional-bi-consumer", "../../content/functional/bi-consumer.html");
functionalContentMapping.set("functional-bi-predicate", "../../content/functional/bi-predicate.html");
functionalContentMapping.set("functional-bi-function", "../../content/functional/bi-function.html");
functionalContentMapping.set("functional-binary-operator", "../../content/functional/binary-operator.html");
functionalContentMapping.set("functional-to-int-function", "../../content/functional/to-int-function.html");
functionalContentMapping.set("functional-to-long-function", "../../content/functional/to-long-function.html");
functionalContentMapping.set("functional-to-double-function", "../../content/functional/to-double-function.html");
functionalContentMapping.set("functional-to-int-bi-function", "../../content/functional/to-int-bi-function.html");
functionalContentMapping.set("functional-to-long-bi-function", "../../content/functional/to-long-bi-function.html");
functionalContentMapping.set("functional-to-double-bi-function", "../../content/functional/to-double-bi-function.html");
functionalContentMapping.set("functional-int-function", "../../content/functional/int-function.html");
functionalContentMapping.set("functional-long-function", "../../content/functional/long-function.html");
functionalContentMapping.set("functional-double-function", "../../content/functional/double-function.html");
functionalContentMapping.set("functional-obj-int-consumer", "../../content/functional/obj-int-consumer.html");
functionalContentMapping.set("functional-obj-long-consumer", "../../content/functional/obj-long-consumer.html");
functionalContentMapping.set("functional-obj-double-consumer", "../../content/functional/obj-double-consumer.html");
functionalContentMapping.set("functional-unary-operator", "../../content/functional/unary-operator.html");
functionalContentMapping.set("functional-comparator", "../../content/functional/comparator.html");

const functionalContentEvent = new Event("FunctionalContentLoaded");
loadContent(document.getElementById("functional-content"), functionalContentMapping, functionalContentEvent);
